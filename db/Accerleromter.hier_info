|Accerleromter
MAX10_CLK1_50 => MAX10_CLK1_50.IN1
HEX0[0] << <GND>
HEX0[1] << <GND>
HEX0[2] << <GND>
HEX0[3] << <GND>
HEX0[4] << <GND>
HEX0[5] << <GND>
HEX0[6] << <GND>
HEX0[7] << <GND>
HEX1[0] << <GND>
HEX1[1] << <GND>
HEX1[2] << <GND>
HEX1[3] << <GND>
HEX1[4] << <GND>
HEX1[5] << <GND>
HEX1[6] << <GND>
HEX1[7] << <GND>
HEX2[0] << <GND>
HEX2[1] << <GND>
HEX2[2] << <GND>
HEX2[3] << <GND>
HEX2[4] << <GND>
HEX2[5] << <GND>
HEX2[6] << <GND>
HEX2[7] << <GND>
HEX3[0] << <GND>
HEX3[1] << <GND>
HEX3[2] << <GND>
HEX3[3] << <GND>
HEX3[4] << <GND>
HEX3[5] << <GND>
HEX3[6] << <GND>
HEX3[7] << <GND>
HEX4[0] << <GND>
HEX4[1] << <GND>
HEX4[2] << <GND>
HEX4[3] << <GND>
HEX4[4] << <GND>
HEX4[5] << <GND>
HEX4[6] << <GND>
HEX4[7] << <GND>
HEX5[0] << <GND>
HEX5[1] << <GND>
HEX5[2] << <GND>
HEX5[3] << <GND>
HEX5[4] << <GND>
HEX5[5] << <GND>
HEX5[6] << <GND>
HEX5[7] << <GND>
KEY[0] => ~NO_FANOUT~
KEY[1] => ~NO_FANOUT~
LEDR[0] << i2c_controller:G_SENSOR_i2c.DBG_STATE[0]
LEDR[1] << i2c_controller:G_SENSOR_i2c.DBG_STATE[1]
LEDR[2] << i2c_controller:G_SENSOR_i2c.DBG_STATE[2]
LEDR[3] << i2c_controller:G_SENSOR_i2c.DBG_STATE[3]
LEDR[4] << i2c_controller:G_SENSOR_i2c.DBG_STATE[4]
LEDR[5] << i2c_controller:G_SENSOR_i2c.DBG_STATE[5]
LEDR[6] << i2c_controller:G_SENSOR_i2c.DBG_STATE[6]
LEDR[7] << i2c_controller:G_SENSOR_i2c.DBG_STATE[7]
LEDR[8] << i2c_controller:G_SENSOR_i2c.DBG_STATE[8]
LEDR[9] << i2c_controller:G_SENSOR_i2c.DBG_STATE[9]
debugGPIO[0] << debugGPIO[0].DB_MAX_OUTPUT_PORT_TYPE
debugGPIO[1] << i2c_controller:G_SENSOR_i2c.GSENSOR_SCL
debugGPIO[2] << i2c_controller:G_SENSOR_i2c.DBG_VALS[0]
debugGPIO[3] << i2c_controller:G_SENSOR_i2c.DBG_VALS[1]
debugGPIO[4] << i2c_controller:G_SENSOR_i2c.DBG_VALS[2]
debugGPIO[5] << <GND>
debugGPIO[6] << <GND>
debugGPIO[7] << <GND>
debugGPIO[8] << <GND>
debugGPIO[9] << <GND>
debugGPIO[10] << <GND>
debugGPIO[11] << <GND>
debugGPIO[12] << <GND>
debugGPIO[13] << <GND>
debugGPIO[14] << <GND>
debugGPIO[15] << <GND>
debugGPIO[16] << <GND>
debugGPIO[17] << <GND>
debugGPIO[18] << <GND>
debugGPIO[19] << <GND>
debugGPIO[20] << <GND>
debugGPIO[21] << <GND>
debugGPIO[22] << <GND>
debugGPIO[23] << <GND>
debugGPIO[24] << <GND>
debugGPIO[25] << <GND>
debugGPIO[26] << <GND>
debugGPIO[27] << <GND>
debugGPIO[28] << <GND>
debugGPIO[29] << <GND>
debugGPIO[30] << <GND>
debugGPIO[31] << <GND>
debugGPIO[32] << <GND>
debugGPIO[33] << <GND>
debugGPIO[34] << <GND>
debugGPIO[35] << <GND>
GSENSOR_CS_N << i2c_controller:G_SENSOR_i2c.GSENSOR_CS_N
GSENSOR_INT[1] => i2c_controller:G_SENSOR_i2c.GSENSOR_INT[0]
GSENSOR_INT[2] => i2c_controller:G_SENSOR_i2c.GSENSOR_INT[1]
GSENSOR_SCLK << i2c_controller:G_SENSOR_i2c.GSENSOR_SCL
GSENSOR_SDI <> i2c_controller:G_SENSOR_i2c.GSENSOR_SDA
GSENSOR_SDO <> i2c_controller:G_SENSOR_i2c.ALT_ADDRESS


|Accerleromter|system_reset_controller:rst_controller
clk => reset_count[0].CLK
clk => reset_count[1].CLK
clk => reset_count[2].CLK
clk => reset_count[3].CLK
clk => reset_count[4].CLK
clk => reset_count[5].CLK
clk => reset_count[6].CLK
clk => reset_count[7].CLK
clk => reset_count[8].CLK
clk => reset_count[9].CLK
clk => reset_count[10].CLK
clk => reset_count[11].CLK
clk => reset_count[12].CLK
clk => reset_count[13].CLK
clk => reset_count[14].CLK
clk => reset_count[15].CLK
clk => reset_count[16].CLK
clk => reset_count[17].CLK
clk => reset_count[18].CLK
clk => reset_count[19].CLK
clk => reset_count[20].CLK
clk => reset_count[21].CLK
clk => reset_count[22].CLK
clk => reset_count[23].CLK
clk => reset_count[24].CLK
clk => reset_count[25].CLK
clk => reset_count[26].CLK
clk => reset_count[27].CLK
clk => reset_count[28].CLK
clk => reset_count[29].CLK
clk => reset_count[30].CLK
clk => reset_count[31].CLK
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
kick => reset_count.OUTPUTSELECT
reset <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|Accerleromter|i2c_controller:G_SENSOR_i2c
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => scl_i.CLK
clk => scl_oe.CLK
clk => state[0].CLK
clk => state[1].CLK
clk => state[2].CLK
clk => state[3].CLK
clk => state[4].CLK
clk => state[5].CLK
clk => state[6].CLK
clk => state[7].CLK
clk => state[8].CLK
clk => state[9].CLK
clk => state[10].CLK
clk => state[11].CLK
clk => state[12].CLK
clk => state[13].CLK
clk => state[14].CLK
clk => state[15].CLK
clk => state[16].CLK
clk => state[17].CLK
clk => state[18].CLK
clk => state[19].CLK
clk => state[20].CLK
clk => state[21].CLK
clk => state[22].CLK
clk => state[23].CLK
clk => state[24].CLK
clk => state[25].CLK
clk => state[26].CLK
clk => state[27].CLK
clk => state[28].CLK
clk => state[29].CLK
clk => state[30].CLK
clk => state[31].CLK
clk => nack_sent.CLK
clk => READ_DATA[0]~reg0.CLK
clk => READ_DATA[1]~reg0.CLK
clk => READ_DATA[2]~reg0.CLK
clk => READ_DATA[3]~reg0.CLK
clk => READ_DATA[4]~reg0.CLK
clk => READ_DATA[5]~reg0.CLK
clk => READ_DATA[6]~reg0.CLK
clk => READ_DATA[7]~reg0.CLK
clk => past_ack.CLK
clk => reg_counter[0].CLK
clk => reg_counter[1].CLK
clk => reg_counter[2].CLK
clk => reg_counter[3].CLK
clk => reg_counter[4].CLK
clk => reg_counter[5].CLK
clk => reg_counter[6].CLK
clk => reg_counter[7].CLK
clk => sda_i.CLK
clk => sda_oe.CLK
clk => ready~reg0.CLK
clk => i2c_comms_finished~reg0.CLK
clk => next_state[0].CLK
clk => next_state[1].CLK
clk => next_state[2].CLK
clk => next_state[3].CLK
clk => next_state[4].CLK
clk => next_state[5].CLK
clk => next_state[6].CLK
clk => next_state[7].CLK
clk => next_state[8].CLK
clk => next_state[9].CLK
clk => next_state[10].CLK
clk => next_state[11].CLK
clk => next_state[12].CLK
clk => next_state[13].CLK
clk => next_state[14].CLK
clk => next_state[15].CLK
clk => next_state[16].CLK
clk => next_state[17].CLK
clk => next_state[18].CLK
clk => next_state[19].CLK
clk => next_state[20].CLK
clk => next_state[21].CLK
clk => next_state[22].CLK
clk => next_state[23].CLK
clk => next_state[24].CLK
clk => next_state[25].CLK
clk => next_state[26].CLK
clk => next_state[27].CLK
clk => next_state[28].CLK
clk => next_state[29].CLK
clk => next_state[30].CLK
clk => next_state[31].CLK
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => i2c_comms_finished.OUTPUTSELECT
rst => ready.OUTPUTSELECT
rst => reg_counter[4].ENA
rst => reg_counter[3].ENA
rst => reg_counter[2].ENA
rst => reg_counter[1].ENA
rst => reg_counter[0].ENA
rst => past_ack.ENA
rst => READ_DATA[7]~reg0.ENA
rst => READ_DATA[6]~reg0.ENA
rst => READ_DATA[5]~reg0.ENA
rst => READ_DATA[4]~reg0.ENA
rst => READ_DATA[3]~reg0.ENA
rst => READ_DATA[2]~reg0.ENA
rst => READ_DATA[1]~reg0.ENA
rst => READ_DATA[0]~reg0.ENA
rst => nack_sent.ENA
rst => reg_counter[5].ENA
rst => reg_counter[6].ENA
rst => reg_counter[7].ENA
rst => sda_i.ENA
rst => sda_oe.ENA
GSENSOR_CS_N <= <VCC>
GSENSOR_INT[0] => ~NO_FANOUT~
GSENSOR_INT[1] => ~NO_FANOUT~
GSENSOR_SCL <= scl_o.DB_MAX_OUTPUT_PORT_TYPE
GSENSOR_SDA <> GSENSOR_SDA
ALT_ADDRESS <> <VCC>
DEV_ADDR[0] => Mux0.IN10
DEV_ADDR[1] => Mux0.IN9
DEV_ADDR[2] => Mux0.IN8
DEV_ADDR[3] => Mux0.IN7
DEV_ADDR[4] => Mux0.IN6
DEV_ADDR[5] => Mux0.IN5
DEV_ADDR[6] => Mux0.IN4
REG_ADDR[0] => Mux1.IN7
REG_ADDR[1] => Mux1.IN6
REG_ADDR[2] => Mux1.IN5
REG_ADDR[3] => Mux1.IN4
REG_ADDR[4] => Mux1.IN3
REG_ADDR[5] => Mux1.IN2
REG_ADDR[6] => Mux1.IN1
REG_ADDR[7] => Mux1.IN0
R_W => sda_i.OUTPUTSELECT
R_W => sda_oe.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => next_state.DATAB
WRITE_DATA[0] => Mux2.IN7
WRITE_DATA[1] => Mux2.IN6
WRITE_DATA[2] => Mux2.IN5
WRITE_DATA[3] => Mux2.IN4
WRITE_DATA[4] => Mux2.IN3
WRITE_DATA[5] => Mux2.IN2
WRITE_DATA[6] => Mux2.IN1
WRITE_DATA[7] => Mux2.IN0
READ_DATA[0] <= READ_DATA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
READ_DATA[1] <= READ_DATA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
READ_DATA[2] <= READ_DATA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
READ_DATA[3] <= READ_DATA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
READ_DATA[4] <= READ_DATA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
READ_DATA[5] <= READ_DATA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
READ_DATA[6] <= READ_DATA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
READ_DATA[7] <= READ_DATA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[0] <= state[0].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[1] <= state[1].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[2] <= state[2].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[3] <= state[3].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[4] <= state[4].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[5] <= state[5].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[6] <= state[6].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[7] <= state[7].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[8] <= state[8].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[9] <= state[9].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[10] <= state[10].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[11] <= state[11].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[12] <= state[12].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[13] <= state[13].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[14] <= state[14].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[15] <= state[15].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[16] <= state[16].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[17] <= state[17].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[18] <= state[18].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[19] <= state[19].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[20] <= state[20].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[21] <= state[21].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[22] <= state[22].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[23] <= state[23].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[24] <= state[24].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[25] <= state[25].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[26] <= state[26].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[27] <= state[27].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[28] <= state[28].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[29] <= state[29].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[30] <= state[30].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[31] <= state[31].DB_MAX_OUTPUT_PORT_TYPE
DBG_VALS[0] <= sda_o.DB_MAX_OUTPUT_PORT_TYPE
DBG_VALS[1] <= sda_oe.DB_MAX_OUTPUT_PORT_TYPE
DBG_VALS[2] <= scl_oe.DB_MAX_OUTPUT_PORT_TYPE
DBG_VALS[3] <= <GND>
DBG_VALS[4] <= <GND>
DBG_VALS[5] <= <GND>
DBG_VALS[6] <= <GND>
DBG_VALS[7] <= <GND>
start_i2c_comms => always2.IN1
i2c_comms_finished <= i2c_comms_finished~reg0.DB_MAX_OUTPUT_PORT_TYPE
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Accerleromter|register_memory:instructions
clk => error_code[0]~reg0.CLK
clk => error_code[1]~reg0.CLK
clk => error_code[2]~reg0.CLK
clk => error_code[3]~reg0.CLK
clk => read_data[0]~reg0.CLK
clk => read_data[1]~reg0.CLK
clk => read_data[2]~reg0.CLK
clk => read_data[3]~reg0.CLK
clk => read_data[4]~reg0.CLK
clk => read_data[5]~reg0.CLK
clk => read_data[6]~reg0.CLK
clk => read_data[7]~reg0.CLK
clk => read_data[8]~reg0.CLK
clk => read_data[9]~reg0.CLK
clk => read_data[10]~reg0.CLK
clk => read_data[11]~reg0.CLK
clk => read_data[12]~reg0.CLK
clk => read_data[13]~reg0.CLK
clk => read_data[14]~reg0.CLK
clk => read_data[15]~reg0.CLK
clk => read_data[16]~reg0.CLK
clk => read_data[17]~reg0.CLK
clk => read_data[18]~reg0.CLK
clk => read_data[19]~reg0.CLK
clk => read_data[20]~reg0.CLK
clk => read_data[21]~reg0.CLK
clk => read_data[22]~reg0.CLK
clk => read_data[23]~reg0.CLK
clk => read_data[24]~reg0.CLK
clk => read_data[25]~reg0.CLK
clk => read_data[26]~reg0.CLK
clk => read_data[27]~reg0.CLK
clk => read_data[28]~reg0.CLK
clk => read_data[29]~reg0.CLK
clk => read_data[30]~reg0.CLK
clk => read_data[31]~reg0.CLK
reset => error_code[0]~reg0.ACLR
reset => error_code[1]~reg0.ACLR
reset => error_code[2]~reg0.ACLR
reset => error_code[3]~reg0.ACLR
reset => read_data[0]~reg0.ACLR
reset => read_data[1]~reg0.ACLR
reset => read_data[2]~reg0.ACLR
reset => read_data[3]~reg0.ACLR
reset => read_data[4]~reg0.ACLR
reset => read_data[5]~reg0.ACLR
reset => read_data[6]~reg0.ACLR
reset => read_data[7]~reg0.ACLR
reset => read_data[8]~reg0.ACLR
reset => read_data[9]~reg0.ACLR
reset => read_data[10]~reg0.ACLR
reset => read_data[11]~reg0.ACLR
reset => read_data[12]~reg0.ACLR
reset => read_data[13]~reg0.ACLR
reset => read_data[14]~reg0.ACLR
reset => read_data[15]~reg0.ACLR
reset => read_data[16]~reg0.ACLR
reset => read_data[17]~reg0.ACLR
reset => read_data[18]~reg0.ACLR
reset => read_data[19]~reg0.ACLR
reset => read_data[20]~reg0.ACLR
reset => read_data[21]~reg0.ACLR
reset => read_data[22]~reg0.ACLR
reset => read_data[23]~reg0.ACLR
reset => read_data[24]~reg0.ACLR
reset => read_data[25]~reg0.ACLR
reset => read_data[26]~reg0.ACLR
reset => read_data[27]~reg0.ACLR
reset => read_data[28]~reg0.ACLR
reset => read_data[29]~reg0.ACLR
reset => read_data[30]~reg0.ACLR
reset => read_data[31]~reg0.ACLR
reg_addr[0] => Equal0.IN63
reg_addr[0] => Equal1.IN63
reg_addr[1] => Equal0.IN62
reg_addr[1] => Equal1.IN62
reg_addr[2] => Equal0.IN61
reg_addr[2] => Equal1.IN61
reg_addr[3] => Equal0.IN60
reg_addr[3] => Equal1.IN60
reg_addr[4] => Equal0.IN59
reg_addr[4] => Equal1.IN59
reg_addr[5] => Equal0.IN58
reg_addr[5] => Equal1.IN58
reg_addr[6] => Equal0.IN57
reg_addr[6] => Equal1.IN57
reg_addr[7] => Equal0.IN56
reg_addr[7] => Equal1.IN56
reg_addr[8] => Equal0.IN55
reg_addr[8] => Equal1.IN55
reg_addr[9] => Equal0.IN54
reg_addr[9] => Equal1.IN54
reg_addr[10] => Equal0.IN53
reg_addr[10] => Equal1.IN53
reg_addr[11] => Equal0.IN52
reg_addr[11] => Equal1.IN52
reg_addr[12] => Equal0.IN51
reg_addr[12] => Equal1.IN51
reg_addr[13] => Equal0.IN50
reg_addr[13] => Equal1.IN50
reg_addr[14] => Equal0.IN49
reg_addr[14] => Equal1.IN49
reg_addr[15] => Equal0.IN48
reg_addr[15] => Equal1.IN48
reg_addr[16] => Equal0.IN47
reg_addr[16] => Equal1.IN47
reg_addr[17] => Equal0.IN46
reg_addr[17] => Equal1.IN46
reg_addr[18] => Equal0.IN45
reg_addr[18] => Equal1.IN45
reg_addr[19] => Equal0.IN44
reg_addr[19] => Equal1.IN44
reg_addr[20] => Equal0.IN43
reg_addr[20] => Equal1.IN43
reg_addr[21] => Equal0.IN42
reg_addr[21] => Equal1.IN42
reg_addr[22] => Equal0.IN41
reg_addr[22] => Equal1.IN41
reg_addr[23] => Equal0.IN40
reg_addr[23] => Equal1.IN40
reg_addr[24] => Equal0.IN39
reg_addr[24] => Equal1.IN39
reg_addr[25] => Equal0.IN38
reg_addr[25] => Equal1.IN38
reg_addr[26] => Equal0.IN37
reg_addr[26] => Equal1.IN37
reg_addr[27] => Equal0.IN36
reg_addr[27] => Equal1.IN36
reg_addr[28] => Equal0.IN35
reg_addr[28] => Equal1.IN35
reg_addr[29] => Equal0.IN34
reg_addr[29] => Equal1.IN34
reg_addr[30] => Equal0.IN33
reg_addr[30] => Equal1.IN33
reg_addr[31] => Equal0.IN32
reg_addr[31] => Equal1.IN32
read_data[0] <= read_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[1] <= read_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[2] <= read_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[3] <= read_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[4] <= read_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[5] <= read_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[6] <= read_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[7] <= read_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[8] <= read_data[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[9] <= read_data[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[10] <= read_data[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[11] <= read_data[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[12] <= read_data[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[13] <= read_data[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[14] <= read_data[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[15] <= read_data[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[16] <= read_data[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[17] <= read_data[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[18] <= read_data[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[19] <= read_data[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[20] <= read_data[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[21] <= read_data[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[22] <= read_data[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[23] <= read_data[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[24] <= read_data[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[25] <= read_data[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[26] <= read_data[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[27] <= read_data[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[28] <= read_data[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[29] <= read_data[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[30] <= read_data[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_data[31] <= read_data[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE
error_code[0] <= error_code[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
error_code[1] <= error_code[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
error_code[2] <= error_code[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
error_code[3] <= error_code[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Accerleromter|counter:refresh_timer
clk => pulse~reg0.CLK
clk => refresh_rate_counter[0].CLK
clk => refresh_rate_counter[1].CLK
clk => refresh_rate_counter[2].CLK
clk => refresh_rate_counter[3].CLK
clk => refresh_rate_counter[4].CLK
clk => refresh_rate_counter[5].CLK
clk => refresh_rate_counter[6].CLK
clk => refresh_rate_counter[7].CLK
clk => refresh_rate_counter[8].CLK
clk => refresh_rate_counter[9].CLK
clk => refresh_rate_counter[10].CLK
clk => refresh_rate_counter[11].CLK
clk => refresh_rate_counter[12].CLK
clk => refresh_rate_counter[13].CLK
clk => refresh_rate_counter[14].CLK
clk => refresh_rate_counter[15].CLK
clk => refresh_rate_counter[16].CLK
clk => refresh_rate_counter[17].CLK
clk => refresh_rate_counter[18].CLK
clk => refresh_rate_counter[19].CLK
clk => refresh_rate_counter[20].CLK
clk => refresh_rate_counter[21].CLK
clk => refresh_rate_counter[22].CLK
clk => refresh_rate_counter[23].CLK
clk => refresh_rate_counter[24].CLK
clk => refresh_rate_counter[25].CLK
clk => refresh_rate_counter[26].CLK
clk => refresh_rate_counter[27].CLK
clk => refresh_rate_counter[28].CLK
clk => refresh_rate_counter[29].CLK
clk => refresh_rate_counter[30].CLK
clk => refresh_rate_counter[31].CLK
reset => pulse~reg0.ACLR
reset => refresh_rate_counter[0].ACLR
reset => refresh_rate_counter[1].ACLR
reset => refresh_rate_counter[2].ACLR
reset => refresh_rate_counter[3].ACLR
reset => refresh_rate_counter[4].ACLR
reset => refresh_rate_counter[5].ACLR
reset => refresh_rate_counter[6].ACLR
reset => refresh_rate_counter[7].ACLR
reset => refresh_rate_counter[8].ACLR
reset => refresh_rate_counter[9].ACLR
reset => refresh_rate_counter[10].ACLR
reset => refresh_rate_counter[11].ACLR
reset => refresh_rate_counter[12].ACLR
reset => refresh_rate_counter[13].ACLR
reset => refresh_rate_counter[14].ACLR
reset => refresh_rate_counter[15].ACLR
reset => refresh_rate_counter[16].ACLR
reset => refresh_rate_counter[17].ACLR
reset => refresh_rate_counter[18].ACLR
reset => refresh_rate_counter[19].ACLR
reset => refresh_rate_counter[20].ACLR
reset => refresh_rate_counter[21].ACLR
reset => refresh_rate_counter[22].ACLR
reset => refresh_rate_counter[23].ACLR
reset => refresh_rate_counter[24].ACLR
reset => refresh_rate_counter[25].ACLR
reset => refresh_rate_counter[26].ACLR
reset => refresh_rate_counter[27].ACLR
reset => refresh_rate_counter[28].ACLR
reset => refresh_rate_counter[29].ACLR
reset => refresh_rate_counter[30].ACLR
reset => refresh_rate_counter[31].ACLR
enable => pulse~reg0.ENA
enable => refresh_rate_counter[31].ENA
enable => refresh_rate_counter[30].ENA
enable => refresh_rate_counter[29].ENA
enable => refresh_rate_counter[28].ENA
enable => refresh_rate_counter[27].ENA
enable => refresh_rate_counter[26].ENA
enable => refresh_rate_counter[25].ENA
enable => refresh_rate_counter[24].ENA
enable => refresh_rate_counter[23].ENA
enable => refresh_rate_counter[22].ENA
enable => refresh_rate_counter[21].ENA
enable => refresh_rate_counter[20].ENA
enable => refresh_rate_counter[19].ENA
enable => refresh_rate_counter[18].ENA
enable => refresh_rate_counter[17].ENA
enable => refresh_rate_counter[16].ENA
enable => refresh_rate_counter[15].ENA
enable => refresh_rate_counter[14].ENA
enable => refresh_rate_counter[13].ENA
enable => refresh_rate_counter[12].ENA
enable => refresh_rate_counter[11].ENA
enable => refresh_rate_counter[10].ENA
enable => refresh_rate_counter[9].ENA
enable => refresh_rate_counter[8].ENA
enable => refresh_rate_counter[7].ENA
enable => refresh_rate_counter[6].ENA
enable => refresh_rate_counter[5].ENA
enable => refresh_rate_counter[4].ENA
enable => refresh_rate_counter[3].ENA
enable => refresh_rate_counter[2].ENA
enable => refresh_rate_counter[1].ENA
enable => refresh_rate_counter[0].ENA
pulse <= pulse~reg0.DB_MAX_OUTPUT_PORT_TYPE


