|Accerleromter
MAX10_CLK1_50 => MAX10_CLK1_50.IN2
HEX0[0] <= <GND>
HEX0[1] <= <GND>
HEX0[2] <= <GND>
HEX0[3] <= <GND>
HEX0[4] <= <GND>
HEX0[5] <= <GND>
HEX0[6] <= <GND>
HEX0[7] <= <GND>
HEX1[0] <= <GND>
HEX1[1] <= <GND>
HEX1[2] <= <GND>
HEX1[3] <= <GND>
HEX1[4] <= <GND>
HEX1[5] <= <GND>
HEX1[6] <= <GND>
HEX1[7] <= <GND>
HEX2[0] <= <GND>
HEX2[1] <= <GND>
HEX2[2] <= <GND>
HEX2[3] <= <GND>
HEX2[4] <= <GND>
HEX2[5] <= <GND>
HEX2[6] <= <GND>
HEX2[7] <= <GND>
HEX3[0] <= <GND>
HEX3[1] <= <GND>
HEX3[2] <= <GND>
HEX3[3] <= <GND>
HEX3[4] <= <GND>
HEX3[5] <= <GND>
HEX3[6] <= <GND>
HEX3[7] <= <GND>
HEX4[0] <= <GND>
HEX4[1] <= <GND>
HEX4[2] <= <GND>
HEX4[3] <= <GND>
HEX4[4] <= <GND>
HEX4[5] <= <GND>
HEX4[6] <= <GND>
HEX4[7] <= <GND>
HEX5[0] <= <GND>
HEX5[1] <= <GND>
HEX5[2] <= <GND>
HEX5[3] <= <GND>
HEX5[4] <= <GND>
HEX5[5] <= <GND>
HEX5[6] <= <GND>
HEX5[7] <= <GND>
KEY[0] => ~NO_FANOUT~
KEY[1] => ~NO_FANOUT~
LEDR[0] <= i2c_controller:G_SENSOR_i2c.DBG_STATE
LEDR[1] <= i2c_controller:G_SENSOR_i2c.DBG_STATE
LEDR[2] <= i2c_controller:G_SENSOR_i2c.DBG_STATE
LEDR[3] <= i2c_controller:G_SENSOR_i2c.DBG_STATE
LEDR[4] <= i2c_controller:G_SENSOR_i2c.DBG_STATE
LEDR[5] <= i2c_controller:G_SENSOR_i2c.DBG_STATE
LEDR[6] <= i2c_controller:G_SENSOR_i2c.DBG_STATE
LEDR[7] <= i2c_controller:G_SENSOR_i2c.DBG_STATE
LEDR[8] <= <VCC>
LEDR[9] <= <VCC>
debugGPIO[0] <= debugGPIO[0].DB_MAX_OUTPUT_PORT_TYPE
debugGPIO[1] <= i2c_controller:G_SENSOR_i2c.GSENSOR_SCL
debugGPIO[2] <= i2c_controller:G_SENSOR_i2c.DBG_VALS
debugGPIO[3] <= i2c_controller:G_SENSOR_i2c.DBG_VALS
debugGPIO[4] <= i2c_controller:G_SENSOR_i2c.DBG_VALS
debugGPIO[5] <= <GND>
debugGPIO[6] <= <GND>
debugGPIO[7] <= <GND>
debugGPIO[8] <= <GND>
debugGPIO[9] <= <GND>
debugGPIO[10] <= <GND>
debugGPIO[11] <= <GND>
debugGPIO[12] <= <GND>
debugGPIO[13] <= <GND>
debugGPIO[14] <= <GND>
debugGPIO[15] <= <GND>
debugGPIO[16] <= <GND>
debugGPIO[17] <= <GND>
debugGPIO[18] <= <GND>
debugGPIO[19] <= <GND>
debugGPIO[20] <= <GND>
debugGPIO[21] <= <GND>
debugGPIO[22] <= <GND>
debugGPIO[23] <= <GND>
debugGPIO[24] <= <GND>
debugGPIO[25] <= <GND>
debugGPIO[26] <= <GND>
debugGPIO[27] <= <GND>
debugGPIO[28] <= <GND>
debugGPIO[29] <= <GND>
debugGPIO[30] <= <GND>
debugGPIO[31] <= <GND>
debugGPIO[32] <= <GND>
debugGPIO[33] <= <GND>
debugGPIO[34] <= <GND>
debugGPIO[35] <= <GND>
GSENSOR_CS_N <= i2c_controller:G_SENSOR_i2c.GSENSOR_CS_N
GSENSOR_INT[1] => GSENSOR_INT[1].IN1
GSENSOR_INT[2] => GSENSOR_INT[2].IN1
GSENSOR_SCLK <= i2c_controller:G_SENSOR_i2c.GSENSOR_SCL
GSENSOR_SDI <> i2c_controller:G_SENSOR_i2c.GSENSOR_SDA
GSENSOR_SDO <> i2c_controller:G_SENSOR_i2c.ALT_ADDRESS


|Accerleromter|system_reset_controller:rst_controller
clk => reset_count[0].CLK
clk => reset_count[1].CLK
clk => reset_count[2].CLK
clk => reset_count[3].CLK
clk => reset_count[4].CLK
clk => reset_count[5].CLK
clk => reset_count[6].CLK
clk => reset_count[7].CLK
clk => reset_count[8].CLK
clk => reset_count[9].CLK
clk => reset_count[10].CLK
clk => reset_count[11].CLK
clk => reset_count[12].CLK
clk => reset_count[13].CLK
clk => reset_count[14].CLK
clk => reset_count[15].CLK
clk => reset_count[16].CLK
clk => reset_count[17].CLK
clk => reset_count[18].CLK
clk => reset_count[19].CLK
clk => reset_count[20].CLK
clk => reset_count[21].CLK
clk => reset_count[22].CLK
clk => reset_count[23].CLK
clk => reset_count[24].CLK
clk => reset_count[25].CLK
clk => reset_count[26].CLK
clk => reset_count[27].CLK
clk => reset_count[28].CLK
clk => reset_count[29].CLK
clk => reset_count[30].CLK
clk => reset_count[31].CLK
reset <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|Accerleromter|i2c_controller:G_SENSOR_i2c
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => scl_i.CLK
clk => scl_oe.CLK
clk => nack_sent.CLK
clk => READ_DATA[0]~reg0.CLK
clk => READ_DATA[1]~reg0.CLK
clk => READ_DATA[2]~reg0.CLK
clk => READ_DATA[3]~reg0.CLK
clk => READ_DATA[4]~reg0.CLK
clk => READ_DATA[5]~reg0.CLK
clk => READ_DATA[6]~reg0.CLK
clk => READ_DATA[7]~reg0.CLK
clk => past_ack.CLK
clk => reg_counter[0].CLK
clk => reg_counter[1].CLK
clk => reg_counter[2].CLK
clk => reg_counter[3].CLK
clk => reg_counter[4].CLK
clk => reg_counter[5].CLK
clk => reg_counter[6].CLK
clk => reg_counter[7].CLK
clk => sda_i.CLK
clk => sda_oe.CLK
clk => i2c_comms_finished~reg0.CLK
clk => ready~reg0.CLK
clk => state~1.DATAIN
clk => next_state~15.DATAIN
rst => ready.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => next_state.OUTPUTSELECT
rst => i2c_comms_finished.OUTPUTSELECT
rst => reg_counter[2].ENA
rst => reg_counter[1].ENA
rst => reg_counter[0].ENA
rst => past_ack.ENA
rst => READ_DATA[7]~reg0.ENA
rst => READ_DATA[6]~reg0.ENA
rst => READ_DATA[5]~reg0.ENA
rst => READ_DATA[4]~reg0.ENA
rst => READ_DATA[3]~reg0.ENA
rst => READ_DATA[2]~reg0.ENA
rst => READ_DATA[1]~reg0.ENA
rst => READ_DATA[0]~reg0.ENA
rst => nack_sent.ENA
rst => reg_counter[3].ENA
rst => reg_counter[4].ENA
rst => reg_counter[5].ENA
rst => reg_counter[6].ENA
rst => reg_counter[7].ENA
rst => sda_i.ENA
rst => sda_oe.ENA
GSENSOR_CS_N <= <VCC>
GSENSOR_INT[1] => ~NO_FANOUT~
GSENSOR_INT[2] => ~NO_FANOUT~
GSENSOR_SCL <= scl_o.DB_MAX_OUTPUT_PORT_TYPE
GSENSOR_SDA <> GSENSOR_SDA
ALT_ADDRESS <> <VCC>
DEV_ADDR[0] => Mux0.IN10
DEV_ADDR[1] => Mux0.IN9
DEV_ADDR[2] => Mux0.IN8
DEV_ADDR[3] => Mux0.IN7
DEV_ADDR[4] => Mux0.IN6
DEV_ADDR[5] => Mux0.IN5
DEV_ADDR[6] => Mux0.IN4
REG_ADDR[0] => Mux1.IN7
REG_ADDR[1] => Mux1.IN6
REG_ADDR[2] => Mux1.IN5
REG_ADDR[3] => Mux1.IN4
REG_ADDR[4] => Mux1.IN3
REG_ADDR[5] => Mux1.IN2
REG_ADDR[6] => Mux1.IN1
REG_ADDR[7] => Mux1.IN0
R_W => sda_i.OUTPUTSELECT
R_W => sda_oe.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => reg_counter.OUTPUTSELECT
R_W => next_state.DATAB
R_W => next_state.DATAB
WRITE_DATA[0] => ~NO_FANOUT~
WRITE_DATA[1] => ~NO_FANOUT~
WRITE_DATA[2] => ~NO_FANOUT~
WRITE_DATA[3] => ~NO_FANOUT~
WRITE_DATA[4] => ~NO_FANOUT~
WRITE_DATA[5] => ~NO_FANOUT~
WRITE_DATA[6] => ~NO_FANOUT~
WRITE_DATA[7] => ~NO_FANOUT~
READ_DATA[0] <= READ_DATA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
READ_DATA[1] <= READ_DATA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
READ_DATA[2] <= READ_DATA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
READ_DATA[3] <= READ_DATA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
READ_DATA[4] <= READ_DATA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
READ_DATA[5] <= READ_DATA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
READ_DATA[6] <= READ_DATA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
READ_DATA[7] <= READ_DATA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[0] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[1] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[2] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[3] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[4] <= DBG_STATE[4].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[5] <= DBG_STATE[4].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[6] <= DBG_STATE[4].DB_MAX_OUTPUT_PORT_TYPE
DBG_STATE[7] <= DBG_STATE[4].DB_MAX_OUTPUT_PORT_TYPE
DBG_VALS[0] <= sda_o.DB_MAX_OUTPUT_PORT_TYPE
DBG_VALS[1] <= sda_oe.DB_MAX_OUTPUT_PORT_TYPE
DBG_VALS[2] <= scl_oe.DB_MAX_OUTPUT_PORT_TYPE
DBG_VALS[3] <= <GND>
DBG_VALS[4] <= <GND>
DBG_VALS[5] <= <GND>
DBG_VALS[6] <= <GND>
DBG_VALS[7] <= <GND>
start_i2c_comms => ready.OUTPUTSELECT
start_i2c_comms => next_state.OUTPUTSELECT
start_i2c_comms => next_state.OUTPUTSELECT
start_i2c_comms => next_state.OUTPUTSELECT
start_i2c_comms => next_state.OUTPUTSELECT
start_i2c_comms => next_state.OUTPUTSELECT
start_i2c_comms => next_state.OUTPUTSELECT
start_i2c_comms => next_state.OUTPUTSELECT
start_i2c_comms => next_state.OUTPUTSELECT
start_i2c_comms => next_state.OUTPUTSELECT
start_i2c_comms => next_state.OUTPUTSELECT
start_i2c_comms => next_state.OUTPUTSELECT
start_i2c_comms => next_state.OUTPUTSELECT
start_i2c_comms => next_state.OUTPUTSELECT
start_i2c_comms => next_state.OUTPUTSELECT
start_i2c_comms => i2c_comms_finished.OUTPUTSELECT
start_i2c_comms => sda_oe.OUTPUTSELECT
i2c_comms_finished <= i2c_comms_finished~reg0.DB_MAX_OUTPUT_PORT_TYPE
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


